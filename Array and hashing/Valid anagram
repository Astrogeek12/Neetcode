Given two strings s and t, return true if t is an anagram of s, and false otherwise.
An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, 
typically using all the original letters exactly once.

class solution{
    public:
    bool Validanagram(string s , string t){
        if(s.size!=t.size()){
            return false;
        }
        unordered_map<char,int) smap;
        unordered_map<char,int> tmap;
        for(int i=0;i<s.size();i++){
            smap[s[i]]++;
            tmap[t[i]]++;
        }
        for(int i=0;i<smap.size();i++){
            if(smap[i]!=tmap[i]){
                return false;
            }
        }
        return true;
    }
};

here the unordered_map maps the character with the integer in smap and tmap
smap[s[i]]++ is the thing to increment the count when it is found basically it's the frequency count of each string
so this code checks the size of two strings and frequency count of each character if botth are valid then it returns true
